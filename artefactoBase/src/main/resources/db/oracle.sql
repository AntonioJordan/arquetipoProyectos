--CREATE USER
	CREATE USER NORMAL_USER IDENTIFIED BY 123;
	GRANT DBA TO NORMAL_USER;


	--CREATE SCHEMA
	CREATE USER jwt_security IDENTIFIED BY 1;

	--PERMISOS
	ALTER USER jwt_security QUOTA UNLIMITED ON USERS;

	--CREATE USERS TABLE(JPA CANT DO IT)
	CREATE TABLE jwt_security.users(
	  id          NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
	  full_name   VARCHAR2(255),
	  email       VARCHAR2(100),
	  password    VARCHAR2(255),
	  created_at  TIMESTAMP DEFAULT CURRENT_TIMESTAMP NOT NULL,
	  updated_at  TIMESTAMP DEFAULT CURRENT_TIMESTAMP
	);



--CREATE APP

	--USER CREATION(NO VALE SE HACE POR POSTMAN LA CONTRASEÑA DEBE ENCRIPTARSE)
	--INSERT INTO JWT_SECURITY.USERS(ID, FULL_NAME, EMAIL, PASSWORD, CREATED_AT, UPDATED_AT)
	--VALUES (1, 'user', 'user@example.com', 'secret', SYSDATE, SYSDATE);

	-- Insertar 3 estudiantes
	INSERT INTO JWT_SECURITY.students (ID, STUDENT) VALUES (1, 'Estudiante 1');
	INSERT INTO JWT_SECURITY.students (ID, STUDENT) VALUES (2, 'Estudiante 2');
	INSERT INTO JWT_SECURITY.students (ID, STUDENT) VALUES (3, 'Estudiante 3');

	-- Insertar 3 sillas
	INSERT INTO JWT_SECURITY.chairs (ID, NAME) VALUES (1, 'Silla 1');
	INSERT INTO JWT_SECURITY.chairs (ID, NAME) VALUES (2, 'Silla 2');
	INSERT INTO JWT_SECURITY.chairs (ID, NAME) VALUES (3, 'Silla 3');

	-- Establecer relaciones entre estudiantes y sillas en la tabla de asociación
	INSERT INTO JWT_SECURITY.students_chairs (STUDENT_ID, CHAIR_ID) VALUES (1, 1);
	INSERT INTO JWT_SECURITY.students_chairs (STUDENT_ID, CHAIR_ID) VALUES (1, 2);
	INSERT INTO JWT_SECURITY.students_chairs (STUDENT_ID, CHAIR_ID) VALUES (2, 2);




